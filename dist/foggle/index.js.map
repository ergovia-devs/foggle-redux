{"version":3,"sources":["../../src/foggle/index.js"],"names":["withFoggle","React","createContext","enabledFeatures","ContextProvider","Provider","Consumer","FOGGLE_STORE_KEY","FoggleConfig","host","console","assert","defaultOptions","updateInterval","headers","getOptions","getHost","getUpdateInterval","setUpdateInterval","interval","isNaN","Error","getHeaders","addHeader","name","value","key","clearHeaders","_FoggleProvider","setInterval","update","props","checkFeatures","config","bind","children","features","Component","connectExtended","mapStateToProps","mapDispatchToProps","mergeProps","options","storeKey","FoggleContainer","FoggleProvider","provider","store","reducer","thunkMiddleware","ReduxProvider","propTypes","PropTypes","exact","func","isRequired","FoggleConsumer","id","found","find","feature","string","featureId","FoggyComponent","dipsatch","boundActionCreators","PureComponent"],"mappings":"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","file":"index.js","sourceRoot":"src","sourcesContent":["/**\n * This file is part of foggle-redux.\n *\n * foggle-redux. is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * foggle-redux is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with foggle-redux.  If not, see <http://www.gnu.org/licenses/>.\n *\n * index.js 05.07.18\n *\n * (c) Copyright 2018 ergovia GmbH\n */\nimport React from 'react';\nimport {connect, createProvider} from 'react-redux';\nimport {applyMiddleware, bindActionCreators, createStore} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer from './state/reducer'\nimport {checkFeatures} from \"./state/actions\";\nimport PropTypes from 'prop-types';\n\nconst {Provider: ContextProvider, Consumer} = React.createContext({\n    enabledFeatures: []\n});\n\nconst FOGGLE_STORE_KEY = 'foggleStore';\n\n/**\n * @typedef {Object} FoggleOptions\n * @property {function} getOptions returns all configured options\n * @property {function} getHost returns the configured host url\n * @property {function} getUpdateInterval returns the configured update interval in milliseconds. default is 600000ms (10 Minutes)\n * @property {function} setUpdateInterval sets the update interval in which Foggle fetches for new enabled features\n *\n */\n\n/**\n * The configuration file for Foggle.\n *\n * @param {string} host required parameter to let Foggle know from where to fetch the enabled features\n * @return {FoggleOptions} an object with all configured options\n * @constructor\n */\nexport const FoggleConfig = (host) => {\n\n    console.assert(host, 'Host not specified. Please pass a host to the FoggleConfig');\n\n    const defaultOptions = {\n        updateInterval: 1000 * 60 * 10,\n        headers: {},\n        host,\n    };\n\n    return {\n\n        /**\n         * Returns all configured options.\n         *\n         * @return {object} returns an object of all configured options\n         */\n        getOptions() {\n            return { ...defaultOptions };\n        },\n\n        /**\n         * Returns the configured host url.\n         *\n         * @return {string} the url\n         */\n        getHost() {\n            return defaultOptions.host;\n        },\n\n        /**\n         * getUpdateInterval returns the configured update interval in milliseconds. default is 600000ms (10 Minutes)\n         *\n         * @return {number} the interval\n         */\n        getUpdateInterval() {\n            return defaultOptions.updateInterval;\n        },\n\n        /**\n         * Sets the update interval in which Foggle fetches for new enabled features\n         *\n         * @param {number} interval the interval to set\n         */\n        setUpdateInterval(interval) {\n            if (isNaN(interval)) {\n                throw new Error('interval must be of type number')\n            }\n            defaultOptions.updateInterval = interval;\n        },\n\n        /**\n         * Returns all the Headers that are configured and passed to the backend\n         *\n         * @return {object} an objects containing all headers\n         */\n        getHeaders() {\n            return { ...defaultOptions.headers }\n        },\n\n        /**\n         * Adds a header that will be sent to the Foggle backend. You can set a header via key and value, or via object.\n         *\n         * @param {string | object} name the name of the header to add, or the object containing all headers to add\n         * @param {string} value the value of the header to add\n         */\n        addHeader(name = '', value) {\n\n            if (typeof key === 'object' && typeof value === 'undefined') {\n                defaultOptions.headers = { ...defaultOptions.headers, ...name}\n\n            } else {\n                defaultOptions.headers[name] = value;\n            }\n\n        },\n\n        /**\n         * Clears all headers that are configured\n         */\n        clearHeaders() {\n            defaultOptions.headers = {}\n        },\n\n    }\n\n};\n\n/**\n * Private _FoggleProvider used to start the update interval and wrapping the application in a context\n */\nclass _FoggleProvider extends React.Component {\n\n    componentDidMount() {\n\n        setInterval(function update() {\n            this.props.checkFeatures(this.props.config.getHost(), this.props.config.getHeaders());\n            return update.bind(this);\n        }.bind(this)(), this.props.config.getUpdateInterval())\n\n    }\n\n    render() {\n\n        const {children, features} = this.props;\n\n        return (\n            <ContextProvider value={{features}}>\n                {children}\n            </ContextProvider>\n        )\n    }\n}\n\n/**\n * Because Foggle is built with redux, we assume that there is a store already. To let redux know, which store should be adressed for Foggle, we pass a static storeKey to\n * the connected Component\n */\nfunction connectExtended(mapStateToProps, mapDispatchToProps, mergeProps, options = {}) {\n    options.storeKey = FOGGLE_STORE_KEY;\n    return connect(mapStateToProps, mapDispatchToProps, mergeProps, options)\n}\n\nconst FoggleContainer = connectExtended(({ features }) => ({ features }), { checkFeatures })(_FoggleProvider);\n\n/**\n * The ContextProvider to wrap around your App. It is used to provide all the enabled feautres around your application.\n */\nexport class FoggleProvider extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.provider = createProvider(FOGGLE_STORE_KEY);\n        this.store = createStore(reducer, applyMiddleware(thunkMiddleware))\n    }\n\n    render() {\n\n        const {children, config = FoggleConfig() } = this.props;\n\n        const ReduxProvider = this.provider;\n\n        return (\n            <ReduxProvider store={this.store}>\n                <FoggleContainer config={config}>\n                    {children}\n                </FoggleContainer>\n            </ReduxProvider>\n        );\n    }\n\n}\n\nFoggleProvider.propTypes = {\n    config: PropTypes.exact({\n        getOptions: PropTypes.func.isRequired,\n        getHost: PropTypes.func.isRequired,\n        getUpdateInterval: PropTypes.func.isRequired,\n        getHeaders: PropTypes.func.isRequired,\n        addHeader: PropTypes.func.isRequired,\n        clearHeaders: PropTypes.func.isRequired\n    })\n};\n\n/**\n * The Consumer to wrap around the feature that should be toggled. The id property is mandatory because it defines, which feature should be toggled.\n */\nexport class FoggleConsumer extends React.Component {\n\n    render() {\n\n        const {id, children} = this.props;\n\n        return (\n            <Consumer>\n                {\n                    value => {\n                        const found = value.features.enabledFeatures.find(feature => feature.id === id);\n                        if (found) {\n                            return children;\n                        }\n                        return null;\n\n                    }\n                }\n            </Consumer>\n        );\n    }\n}\n\nFoggleConsumer.propTypes = {\n    id: PropTypes.string.isRequired\n};\n\n/**\n * Higher-Order-Component if you wish to activate Foggle on container level without using the FoggleConsumer\n *\n * @param {Object} Component the Component that should be wrapped in Foggle\n * @param {string} featureId the id of the feature that should be toggled\n * @param {object} mapStateToProps maps the current state the components props\n * @param {object} mapDispatchToProps maps the redux actions to the components props\n * @return {function} the wrapped component\n */\nexport function withFoggle(Component, featureId, mapStateToProps, mapDispatchToProps) {\n\n    class FoggyComponent extends React.PureComponent {\n\n        constructor(props) {\n            super(props);\n            const { dipsatch } = props;\n            this.boundActionCreators = bindActionCreators(mapDispatchToProps, dipsatch);\n        }\n\n        render() {\n            return (\n                <Consumer>\n                    {\n                        value => {\n\n                            const found = value.features.enabledFeatures.find(feature => feature.id === featureId);\n                            if (found) {\n                                return <Component {...this.props} {...this.boundActionCreators}/>;\n                            }\n\n                            return null;\n\n                        }\n                    }\n                </Consumer>\n            );\n        }\n\n    }\n\n\n    return connect(mapStateToProps)(FoggyComponent);\n\n}\n"]}